generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Declaration {
  id                              String    @id @db.Uuid @default(uuid())
  createdAt                      DateTime? @default(now()) @db.Timestamptz(6) @map("created_at")
  updatedAt                      DateTime? @db.Timestamptz(6) @map("updated_at")
  deletedAt                      DateTime? @db.Timestamptz(6) @map("deleted_at")
  declarationType                String?   @db.VarChar(60) @map("declaration_type")
  job                             String?   @db.VarChar(255)
  date                            String?   @db.VarChar(30)
  hour                            String?   @db.VarChar(60)
  town                            String?   @db.VarChar(255)
  location                        String?   @db.VarChar(255)
  other_location                  String?   @db.VarChar(255)
  fact_types                      Json?
  fp_groups                       Json?
  fp_spoken_violences             Json?
  fp_physical_violences           Json?
  fp_physical_violences_precision String?   @db.VarChar(255)
  fp_sexual_violences             Json?
  fp_psychological_violences      Json?
  fp_discriminations              Json?
  fp_no_respects                  Json?
  fp_others                       Json?
  fg_groups                       Json?
  fg_deteriorations               Json?
  fg_steal_without_breakins       Json?
  fg_steal_with_breakins          Json?
  fg_others                       Json?
  r_cause_patients                Json?
  r_cause_professionals           Json?
  r_discords                      Json?
  r_life_rules                    Json?
  r_falsifications                Json?
  r_deficient_communications      Json?
  r_others                        Json?
  r_others_precision              String?   @db.VarChar(255)
  r_not_apparent                  Boolean?
  victims                         Json?
  third_party                     Json?
  third_party_is_present          String?   @db.VarChar(255)
  third_party_precision           String?   @db.VarChar(255)
  pursuit                         String?   @db.VarChar(255)
  pursuit_precision               String?   @db.VarChar(255)
  pursuit_by                      Json?
  authors                         Json?
  description                     String?
  declarant_contact_agreement     String?   @db.VarChar(30)
  declarant_names                 String?   @db.VarChar(255)
  declarant_external_id           String?   @db.VarChar(255)
  declarant_email                 String?   @db.VarChar(255)
  declarant_tel                   String?   @db.VarChar(30)
  etsId                          String?   @db.Uuid @map("ets_id")
  ets_status                      String?   @db.VarChar(30)
  ets_declared_by                 String?   @db.Uuid
  ets_moderated_by                String?   @db.Uuid
  ets_location1                   String?   @db.VarChar(255)
  ets_location2                   String?   @db.VarChar(255)

  @@map("declarations")

}

// model knex_migrations {
//   id             Int       @id @default(autoincrement())
//   name           String?   @db.VarChar(255)
//   batch          Int?
//   migration_time DateTime? @db.Timestamptz(6)
// }

// model knex_migrations_lock {
//   index     Int  @id @default(autoincrement())
//   is_locked Int?
// }

// /// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
// model reports_history {
//   sent_at DateTime? @db.Timestamptz(6)
//   sent_to String?   @db.VarChar(255)

//   @@ignore
// }

model User {
  id         String    @id @db.Uuid @default(uuid())
  createdAt DateTime? @default(now()) @db.Timestamptz(6) @map("created_at")
  updatedAt DateTime? @db.Timestamptz(6) @map("updated_at")
  deletedAt DateTime? @db.Timestamptz(6) @map("deleted_at")
  firstName String?   @db.VarChar(255) @map("first_name")
  lastName  String?   @db.VarChar(255) @map("last_name")
  email      String    @db.VarChar(128)
  password   String?   @db.VarChar(128)
  role       String    @db.VarChar(128)
  scope      Json?

  @@unique([email, deletedAt], name: "users_email_deleted_at_unique")

  @@map("users")
}
